---
# tasks file for delete-instance
- name: Deleting the Instance
  amazon.aws.ec2_instance:
    region: "{{ region }}"
    state: absent
    filters:
      instance-state-name: running
      tag:Name : "{{ ec2_name_tag }}"
      tag:EnvName : "{{ ec2_env }}"

- name: Grab VPC details
  amazon.aws.ec2_vpc_net_info:
    region: "{{ region }}"
    filters:
      tag:Environment: "{{ ec2_env }}"
  register: all_vpcs

- name: Gather information about NAT gateways
  amazon.aws.ec2_vpc_nat_gateway_info:
    region: "{{ region }}"
    filters:
      state: ['available']
  register: nat_gateway_result

- name: Delete nat gateway and release EIP.
  community.aws.ec2_vpc_nat_gateway:
    state: absent
    nat_gateway_id: "{{ nat_gateway_result.result[0].nat_gateway_id }}"
    release_eip: true
    wait: yes
    wait_timeout: 300
    region: "{{ region }}"

- name: Gather all route tables
  amazon.aws.ec2_vpc_route_table:
    vpc_id: "{{ all_vpcs.vpc.id }}"
    region: "{{ region }}"
  register: route_tables

- name: Delete Public Route Table
  amazon.aws.ec2_vpc_route_table:
    vpc_id: "{{ all_vpcs.vpc.id }}"
    region: "{{ region }}"
    route_table_id: "{{ route_tables.route_tables }}"
    state: absent

#- name: Gather all subnets in the VPC
- name: Gather all subnets in the VPC
  amazon.aws.ec2_vpc_subnet:
    state: present
    vpc_id: "{{ all_vpcs.vpc.id }}"
    tags:
      Name: Database Subnet
  register: database_subnet

- name: Remove subnet for database servers
  amazon.aws.ec2_vpc_subnet:
    state: absent
    vpc_id: vpc-123456
    cidr: 10.0.1.16/28
    
#- name: Delete Public Subnet
- name: Delete AWS VPC
  amazon.aws.ec2_vpc_net:
    name: "{{ vpc_name }}"
    cidr_block: "{{ vpc_cidr_block }}"
    region: "{{ region }}"
    state: absent
   